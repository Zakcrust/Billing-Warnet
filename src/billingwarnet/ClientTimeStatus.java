/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package billingwarnet;

import java.lang.reflect.InvocationTargetException;
import java.util.concurrent.Executors;
import java.util.concurrent.ScheduledExecutorService;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author zak
 */
public class ClientTimeStatus extends javax.swing.JFrame {

    /**
     * Creates new form clientTimeStatus
     */
    private static int waktu;
    public ClientTimeStatus() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        timeLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        timeLabel.setText("Waktu tersisa");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(timeLabel)
                .addContainerGap(294, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(timeLabel)
                .addGap(0, 285, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientTimeStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientTimeStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientTimeStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientTimeStatus.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        if(waktu<=0)
        waktu=3600;
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ClientTimeStatus().setVisible(true);
            
        });
       /*
        try {
            /*java.awt.EventQueue.invokeAndWait(() -> {
                while(waktu>0)
                {
                    updateTimeStatus();
                    System.out.println(setTimeStamp(waktu));
                }
                throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            });
            
            /*
            new Thread(() -> {
            while(waktu>0)
            {
            updateTimeStatus();
            System.out.println("lmao");
            }
            }).start();
            
        } catch (InterruptedException | InvocationTargetException ex) {
            Logger.getLogger(ClientTimeStatus.class.getName()).log(Level.SEVERE, null, ex);
        }*/
        while(waktu>0)
            {
            updateTimeStatus();
            System.out.println(setTimeStamp(waktu));
            }
    }

    
    private static void updateTimeStatus()
    {
        timeLabel.setText(setTimeStamp(waktu));
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(ClientTimeStatus.class.getName()).log(Level.SEVERE, null, ex);
        }
        waktu--;
    }
    
    public void setTime(int waktu)
    {
        ClientTimeStatus.waktu = waktu;
    }
    
    private static String setTimeStamp(int waktu)
    {
        String temp = "";
        temp = "" + (waktu/3600)+":"+(waktu%3600/60)+":"+(waktu%60);
        return temp;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JLabel timeLabel;
    // End of variables declaration//GEN-END:variables
}
